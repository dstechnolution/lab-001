---
name: Terraform action
on:
    push:
    pull_request:

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repo
              uses: actions/checkout@v2

            - uses: JasonEtco/create-an-issue@v2
              if: ${{ failure() }}
              with:
                  filename: .github/ISSUE_TEMPLATE/cicd_error.md
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Validate YAML files
              uses: ibiqlik/action-yamllint@v3

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v1
              with:
                  terraform_version: 0.14.8
                  cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

            - name: Terraform lint checker
              uses: terraform-linters/setup-tflint@v1
              with:
                  tflint_version: latest
                  github_token: ${{ secrets.GITHUB_TOKEN }}

            - name: Verify Terraform Format adheres to canonical format and validate
              run: |
                terraform fmt -check
                terraform init
                terraform validate -no-color

            - name: Terraform security scan
              uses: triat/terraform-security-scan@v2.2.1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Report on config drift
              uses: cloudskiff/driftctl-action@v1
              with:
                  version: latest

    terraform:
        runs-on: ubuntu-latest
        steps:
            - name: Check out the repo
              uses: actions/checkout@v2

            - uses: JasonEtco/create-an-issue@v2
              if: ${{ failure() }}
              with:
                  filename: .github/ISSUE_TEMPLATE/cicd_error.md
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v1
              with:
                  terraform_version: 0.14.8
                  cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

            - name: Terraform Init
              id: init
              run: terraform init
         
            - name: Terraform Plan
              id: plan
              if: github.event_name == 'pull_request'
              run: terraform plan -no-color
              continue-on-error: true

            - name: Update Pull Request            
              uses: actions/github-script@0.9.0
              if: github.event_name == 'pull_request'
              env:
                PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                  const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
                  #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
                  #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
                  #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

                  <details><summary>Show Plan</summary>

                  \`\`\`\n
                  ${process.env.PLAN}
                  \`\`\`

                  </details>

                  *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

                  github.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: output
                  })

            - name: Terraform Plan Status
              if: steps.plan.outcome == 'failure'
              run: exit 1
      
            - name: Terraform Apply
              if: github.ref == 'refs/heads/main' && github.event_name == 'push'
              run: terraform apply -auto-approve
